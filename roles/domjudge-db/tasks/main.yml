---
# Creates the Domjudge Database and configures the Database

- name: Ensure MariaDB is installed
  ansible.builtin.package:
    name: mariadb-server
    state: present
  become: true

- name: Ensure MariaDB is running
  ansible.builtin.service:
    name: mariadb
    enabled: true
    state: started
  become: true

- name: Set root password mariadb
  mysql_user:
    check_implicit_admin: true
    login_user: root
    login_password: "{{ db_admin_password }}"
    user: root
    password: "{{ db_admin_password }}"
    host: localhost

- name: Generate database credentials file
  ansible.builtin.command: >
    ./dj_setup_database genpass
  args:
    chdir: /home/{{ username }}/Domjudge/domserver/bin
  become_user: "{{ username }}"
  no_log: true

- name: Drop Domjudge Database if it exists
  community.mysql.mysql_query:
    query: "DROP DATABASE IF EXISTS domjudge;"
    login_user: root
    login_password: "{{ db_admin_password }}"
  become: true
  no_log: true

- name: Run Domjudge database setup script to install database and user
  ansible.builtin.command: >
    ./dj_setup_database -u root -p {{ db_admin_password }} install
  args:
    chdir: /home/{{ username }}/Domjudge/domserver/bin
  become: true

- name: Checking if databases were successfully created
  community.mysql.mysql_query:
    login_user: root
    login_password: "{{ db_admin_password }}"
    query: "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = '{{ item }}';"
  loop:
    - domjudge
    - information_schema
    - mysql
    - performance_schema
    - sys
  register: db_check
  no_log: true

- name: Throws an Error if Databases are missing
  ansible.builtin.debug:
    msg: >-
      {% if item.query_result[0] | length > 0 -%}
        Database '{{ item.item }}' exists.
      {%- else -%}
        Database '{{ item.item }}' does not exist.
      {%- endif %}
  loop: "{{ db_check.results }}"
  no_log: true
   
